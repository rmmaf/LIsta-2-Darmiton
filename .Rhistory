install.packages(c("knitr", "tidyverse"))
install.packages(c("knitr", "tidyverse"))
install.packages("tidyverse")
library(knitr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
moda <- function(v) {
uniqv <- unique(v)
return(uniqv[which.max(tabulate(match(v, uniqv)))])
}
k_proximos <- function(instance, examples, k, classCol){
x <- examples[,-classCol]
y <- examples[,classCol]
dists <- c()
classe <- c()
for (i in 1:nrow(x)) {
dists <- append(dists, dist(rbind(x[i,], instance)))
classe <- append(classe, y[i])
}
df <- data.frame(classe = classe, dists = dists)
df <- df[order(df$dists),]
proximos <- as.vector(as.numeric(rownames(df[1:k,])))
candidates <- y[as.numeric(proximos)]
result <- moda(candidates)
return(result)
}
calculateKnnAccuracy <- function(k, test, train, classCol){
predictions <- apply(test[,-classCol], 1, function(x) k_proximos(x, train, k, classCol))
testy <- test[,classCol]
dif <- predictions == testy
return(sum(dif)/length(predictions))
}
df <- read.arff("arquivos/deffects2.arff")
df[,22] <- gsub("false", FALSE, df[,22])
df[,22] <- gsub("true", TRUE, df[,22])
kable(head(df[,1:11]))
kable(head(df[,11:15]))
kable(head(df[,16:22]))
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,3)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 22)
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
df <- read.arff("arquivos/datatrieve.arff")
kable(head(df))
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,3)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
library(knitr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
source('knn2.R')
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,3)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
